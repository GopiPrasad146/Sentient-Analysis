# -*- coding: utf-8 -*-
"""Copy of Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yluavJy0u10sR39UcXEPVv8cTdQ71nos
"""



"""#Description : This is a sentiment analysis program that parses the tweets fetched from Twitter using python """

#Import the libraries
import tweepy
from textblob import TextBlob
from wordcloud import WordCloud
import pandas as pd
import numpy as np
import re
import matplotlib.pyplot as plt
plt.style.use("fivethirtyeight")

#load the data
from google.colab import files
uploaded = files.upload()

import pandas as pd

#load the data
from google.colab import files
uploaded = files.upload()

import pandas as pd

#load the data
from google.colab import files
uploaded = files.upload()

df = pd.read_csv("login.csv")
df

import keyword as key

# Twitter API credentials
consumerkey = df["id"][0]
consumerSecret = df["id"][1]
accessToken = df["id"][2]
accessTokenSecret = df["id"][3]

import tweepy

# create the aunthentication object
authenticate = tweepy.OAuthHandler(consumerkey, consumerSecret)

# Set the access token and access Secret
authenticate.set_access_token(accessToken, accessTokenSecret)

# create the API object while passing in the auth information
api = tweepy.API(authenticate, wait_on_rate_limit = True)

# Extract 100 tweets from the twitter user
df = api.user_timeline(screen_name ="BillGates", count= 100, lang = "en", tweet_mode="extended")

# Print the last 5 tweets from the account
i =1
print("Show the 5 recent tweet: \n")
for tweet in df[0:5]:
  print(tweet.full_text + "\n")

!pip install matplotlib-venn

!apt-get -qq install -y libfluidsynth1

# Create a dataframe with a column called tweets
df = pd.DataFrame( [tweet.full_text for tweet in posts] , columns=["tweet"])

#Show the first 5 rows from data
df.head()

# clean the text 

# Create a function to clean the tweets
def cleanTxt(text):
  text = re.sub(r'@[A-za-z0-9+', '', text)
  text = re.sub(r'#','', text)
  text = re.sub(r'RT[\s]+', '', text)
  text = re.sub(r'https?:\/\.\S+', '', text)

  return text

  #Cleaning the text
  df["login.csv"]= df["login.csv"].apply(cleanText)

  #show the clean text
  df

# Create a function to get the subjectivity
def getSubjectivity(text):
  return TextBlob(text).sentiment.subjectivity

  # create a function to get the polarity
  def getPolarity(text):
    return TextBlob(text).sentiment.polarity
  
  # Create two new coloumns
  df["Subjectivity"] = df["tweet"].apply(getSubjectivity)
  df["Polarity"] = df["tweet"].apply(getPolarity)

   #show the new dataframe withe the new column
  df()

from wordcloud import WordCloud

# Plot the Word Cloud
allWords = ' '.join( [twt for twt in df["tweet"]])
wordcloud = Wordcloud(background_color='white',mode="RGB", width=2000 , height=1000).generate(data) 

plt.imshow(wordCloud, interpolation= "bilinear")
plt.axis("off")
plt.show()

import pandas as pd

# Create a function to compute the negative, netural, postive analysis
def getAnalysis(score):
  if score < 0:
    return "Negative"
  elif score == 0:
    return "Neutral"
  else:
    return "Postive"

df["Analysis"] = df["Polarity"].apply(getAnalysis)

#show the dataframe
df

# Print all the postive tweets
j=1
sortedDF = df.sort_values(by=["Polarity"])
for i in range(0, sortedDF.shape[0]):
  if(sortedDF["Analysis"][i] == "Positive"):
    print(str(j) + ')  '+sortedPDF["Tweet"][i])
    print()
    j = j+1

# Print all the Negative tweets
j=1
sortedDF = df.sort_values(by=["Polarity"], ascending="False")
for i in range(0, sortedDF.shape[0]):
  if(sortedDF["Analysis"][i] == "Negative"):
    print(str(j) + ')  '+sortedPDF["Tweet"][i])
    print()
    j = j+1

import matplotlib.pyplot as plt
plt.style.use("fivethirtyeight")

# plot the polarity and subjectivity
plt.figure(figsize=(8,6))
for i in range(0, df.shape[0]):
  plt.scatter(df["Polarity"][i],df["Subjectivity"][i], colors="Blue" )

plt.title("Sentiment Analysis")
plt.xlabel("Polarity")
plt.ylabel("Subjectivity")
plt.show()

# Get the percentage of postive tweets
ptweets = df[df.Analysis == "Postive"]
ptweets = ptweets["Tweets"]

round( (ptweet.shape[0]) *100 , 1)

df = pd.read_csv("login.csv")
df

# Get the percentage of Negative tweets
ntweets = df[df.Analysis == "Negative"]
ntweets = ntweets["Tweets"]

round( (ntweet.shape[0]) *100 , 1)

import pandas as pd

df = pd.read_csv("login.csv")
df

# show the value counts
df["Analysis"].value_counts()

#plot the visalize the counts
plt.title("Sentimnt Analysis")
plt.xlabel("Sentiment")
plt.ylabel("Counts")
df["Analysis"].value_counts().plot(kind="bar")
plt.show()